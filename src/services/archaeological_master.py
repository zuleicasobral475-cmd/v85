#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ARQV30 Enhanced v2.0 - Archaeological Master Agent
ARQUE√ìLOGO MESTRE DA PERSUAS√ÉO - An√°lise Forense em 12 Camadas
"""

import logging
import time
import json
from typing import Dict, List, Any, Optional
from datetime import datetime
from services.ai_manager import ai_manager
from services.auto_save_manager import salvar_etapa, salvar_erro

logger = logging.getLogger(__name__)

class ArchaeologicalMaster:
    """ARQUE√ìLOGO MESTRE DA PERSUAS√ÉO - An√°lise Forense Completa"""
    
    def __init__(self):
        """Inicializa o Arque√≥logo Mestre"""
        self.analysis_layers = [
            'abertura_cirurgica',
            'arquitetura_narrativa',
            'construcao_autoridade',
            'gestao_objecoes',
            'construcao_desejo',
            'educacao_estrategica',
            'apresentacao_oferta',
            'linguagem_padroes',
            'gestao_tempo_ritmo',
            'pontos_maior_impacto',
            'vazamentos_otimizacoes',
            'metricas_forenses'
        ]
        
        logger.info("üî¨ ARQUE√ìLOGO MESTRE DA PERSUAS√ÉO inicializado")
    
    def execute_archaeological_analysis(
        self, 
        data: Dict[str, Any],
        research_context: str = "",
        session_id: str = None
    ) -> Dict[str, Any]:
        """Executa an√°lise arqueol√≥gica completa em 12 camadas"""
        
        logger.info("üî¨ INICIANDO ESCAVA√á√ÉO ARQUEOL√ìGICA ULTRA-PROFUNDA")
        
        try:
            # Salva in√≠cio da an√°lise arqueol√≥gica
            salvar_etapa("arqueologia_iniciada", {
                "data": data,
                "research_context": research_context[:1000],
                "layers": self.analysis_layers
            }, categoria="analise_completa")
            
            # Constr√≥i prompt arqueol√≥gico ultra-detalhado
            archaeological_prompt = self._build_archaeological_prompt(data, research_context)
            
            # Executa an√°lise com IA
            response = ai_manager.generate_analysis(archaeological_prompt, max_tokens=8192)
            
            if not response:
                raise Exception("ARQUE√ìLOGO FALHOU: IA n√£o respondeu")
            
            # Processa resposta arqueol√≥gica
            archaeological_analysis = self._process_archaeological_response(response, data)
            
            # Executa an√°lise forense quantitativa
            forensic_metrics = self._execute_forensic_analysis(archaeological_analysis, data)
            archaeological_analysis['metricas_forenses_objetivas'] = forensic_metrics
            
            # Gera relat√≥rio arqueol√≥gico final
            archaeological_report = self._generate_archaeological_report(archaeological_analysis, data)
            archaeological_analysis['relatorio_arqueologico_completo'] = archaeological_report
            
            # Salva an√°lise arqueol√≥gica completa
            salvar_etapa("arqueologia_completa", archaeological_analysis, categoria="analise_completa")
            
            logger.info("‚úÖ ESCAVA√á√ÉO ARQUEOL√ìGICA CONCLU√çDA - DNA DA CONVERS√ÉO EXTRA√çDO")
            return archaeological_analysis
            
        except Exception as e:
            logger.error(f"‚ùå FALHA CR√çTICA na an√°lise arqueol√≥gica: {e}")
            salvar_erro("arqueologia_falha", e, contexto=data)
            return self._generate_archaeological_emergency(data)
    
    def _build_archaeological_prompt(self, data: Dict[str, Any], research_context: str) -> str:
        """Constr√≥i prompt arqueol√≥gico ultra-detalhado"""
        
        prompt = f"""
# VOC√ä √â O ARQUE√ìLOGO MESTRE DA PERSUAS√ÉO - AN√ÅLISE FORENSE ULTRA-PROFUNDA

Sua miss√£o √© escavar cada detalhe do mercado de {data.get('segmento', 'neg√≥cios')} para encontrar o DNA COMPLETO da convers√£o. Seja cir√∫rgico, obsessivo e implac√°vel.

## DADOS REAIS DO PROJETO:
- **Segmento**: {data.get('segmento', 'N√£o informado')}
- **Produto/Servi√ßo**: {data.get('produto', 'N√£o informado')}
- **P√∫blico-Alvo**: {data.get('publico', 'N√£o informado')}
- **Pre√ßo**: R$ {data.get('preco', 'N√£o informado')}
- **Objetivo de Receita**: R$ {data.get('objetivo_receita', 'N√£o informado')}

## CONTEXTO DE PESQUISA ARQUEOL√ìGICA:
{research_context[:10000] if research_context else "Pesquisa arqueol√≥gica em andamento..."}

## DISSECA√á√ÉO EM 12 CAMADAS PROFUNDAS - AN√ÅLISE ARQUEOL√ìGICA:

Execute uma an√°lise ULTRA-PROFUNDA seguindo estas camadas:

### CAMADA 1: ABERTURA CIR√öRGICA (Primeiros momentos cr√≠ticos)
- Hook dos primeiros segundos (palavra por palavra)
- Promessa inicial espec√≠fica
- Credibilidade imediata estabelecida
- Quebra de padr√£o identificada
- Primeira obje√ß√£o neutralizada

### CAMADA 2: ARQUITETURA NARRATIVA COMPLETA
- Estrutura temporal detalhada
- Arcos narrativos mapeados
- Protagonistas e conflitos
- Momentos de tens√£o e al√≠vio
- Storytelling estrat√©gico

### CAMADA 3: CONSTRU√á√ÉO DE AUTORIDADE PROGRESSIVA
- Credenciais diretas e indiretas
- Prova social estrat√©gica
- Demonstra√ß√£o de conhecimento
- Vulnerabilidade calculada
- Superioridade sutil

### CAMADA 4: GEST√ÉO DE OBJE√á√ïES MICROSC√ìPICA
- Obje√ß√µes de credibilidade, tempo, dinheiro
- T√©cnicas preemptivas vs reativas
- Linguagem espec√≠fica para neutraliza√ß√£o
- Transforma√ß√£o de obje√ß√£o em benef√≠cio

### CAMADA 5: CONSTRU√á√ÉO DE DESEJO SISTEM√ÅTICA
- Pintura da dor amplificada
- Contraposi√ß√£o do prazer
- Urg√™ncia do problema
- Escassez da oportunidade
- FOMO estrat√©gico

### CAMADA 6: EDUCA√á√ÉO ESTRAT√âGICA VS REVELA√á√ÉO
- Balanceamento ensino vs reten√ß√£o
- Profundidade do conte√∫do
- Cliffhangers educacionais
- Diferencia√ß√£o amostra vs produto

### CAMADA 7: APRESENTA√á√ÉO DA OFERTA DETALHADA
- Timing da primeira men√ß√£o
- Estrutura de apresenta√ß√£o
- Elementos inclu√≠dos
- Justificativa de valor
- Ancoragem de pre√ßo

### CAMADA 8: LINGUAGEM E PADR√ïES VERBAIS
- Palavras de poder identificadas
- Frames lingu√≠sticos
- Padr√µes de repeti√ß√£o
- Comandos embutidos
- Pressuposi√ß√µes estrat√©gicas

### CAMADA 9: GEST√ÉO DE TEMPO E RITMO
- Cronometragem precisa
- An√°lise de pacing
- Varia√ß√£o de velocidade
- Pausas estrat√©gicas
- Gest√£o de energia

### CAMADA 10: PONTOS DE MAIOR IMPACTO
- Maior pico emocional
- Revela√ß√£o principal
- Virada de chave
- Momento de convers√£o
- Cl√≠max da apresenta√ß√£o

### CAMADA 11: VAZAMENTOS E OTIMIZA√á√ïES
- Pontos fracos identificados
- Vazamentos de aten√ß√£o
- Inconsist√™ncias
- Oportunidades perdidas
- Melhorias √≥bvias

### CAMADA 12: M√âTRICAS FORENSES OBJETIVAS
- An√°lise lingu√≠stica quantitativa
- Ratio EU vs VOC√ä
- Promessas vs Provas
- Densidade persuasiva
- Gatilhos de Cialdini

RETORNE JSON ESTRUTURADO ULTRA-COMPLETO:

```json
{{
  "dna_conversao_completo": {{
    "formula_estrutural": "F√≥rmula extra√≠da da convers√£o",
    "sequencia_gatilhos": ["Gatilho 1", "Gatilho 2", "Gatilho 3"],
    "padroes_linguagem": ["Padr√£o 1", "Padr√£o 2"],
    "timing_otimo": "Timing ideal de cada elemento"
  }},
  
  "camada_1_abertura_cirurgica": {{
    "hook_primeiros_segundos": "An√°lise palavra por palavra",
    "emocao_ativada": "Emo√ß√£o predominante",
    "promessa_inicial": "Primeira promessa espec√≠fica",
    "credibilidade_imediata": "Como estabelece credibilidade",
    "quebra_padrao": "T√©cnica de pattern interrupt",
    "primeira_objecao_neutralizada": "Qual obje√ß√£o antecipa",
    "tempo_primeira_promessa": "Segundos at√© primeira promessa",
    "separacao_outros": "Como cria diferencia√ß√£o"
  }},
  
  "camada_2_arquitetura_narrativa": {{
    "estrutura_temporal": "Mapeamento minuto a minuto",
    "arcos_narrativos": ["Hist√≥ria 1", "Hist√≥ria 2"],
    "protagonistas": ["Personagem 1", "Personagem 2"],
    "conflitos_apresentados": ["Conflito 1", "Conflito 2"],
    "momentos_tensao": ["Tens√£o 1", "Tens√£o 2"],
    "pontos_alivio": ["Al√≠vio 1", "Al√≠vio 2"],
    "estrutura_classica": "Usa contexto ‚Üí conflito ‚Üí cl√≠max ‚Üí resolu√ß√£o?",
    "historias_pessoais_terceiros": "Propor√ß√£o pessoal vs terceiros",
    "conexao_individual_universal": "Como conecta hist√≥rias com problema universal"
  }},
  
  "camada_3_construcao_autoridade": {{
    "credenciais_diretas": ["Credencial 1", "Credencial 2"],
    "credenciais_indiretas": ["Credencial indireta 1"],
    "prova_social_estrategica": ["Prova 1", "Prova 2"],
    "demonstracao_conhecimento": "Como demonstra expertise",
    "vulnerabilidade_calculada": "Momentos de vulnerabilidade",
    "superioridade_sutil": "Como estabelece superioridade",
    "timing_primeira_credencial": "Minuto da primeira credencial forte",
    "distribuicao_autoridade": "Como distribui elementos de autoridade",
    "autoridade_emprestada": "Usa autoridade de terceiros?",
    "equilibrio_autoridade_proximidade": "Como equilibra autoridade com afinidade"
  }},
  
  "camada_4_gestao_objecoes": {{
    "objecoes_credibilidade": ["Obje√ß√£o 1", "Obje√ß√£o 2"],
    "objecoes_tempo": ["Obje√ß√£o tempo 1"],
    "objecoes_dinheiro": ["Obje√ß√£o dinheiro 1"],
    "objecoes_capacidade": ["Obje√ß√£o capacidade 1"],
    "objecoes_timing": ["Obje√ß√£o timing 1"],
    "objecoes_diferenciacao": ["Obje√ß√£o diferencia√ß√£o 1"],
    "neutralizacao_preemptiva": "Neutraliza antes da obje√ß√£o aparecer",
    "neutralizacao_reativa": "Responde ap√≥s obje√ß√£o verbalizada",
    "uso_terceiros": "Usa terceiros para neutralizar",
    "linguagem_especifica": "Linguagem espec√≠fica para cada obje√ß√£o",
    "transformacao_objecao_beneficio": "Como transforma obje√ß√£o em benef√≠cio"
  }},
  
  "camada_5_construcao_desejo": {{
    "pintura_dor": "Como amplifica a dor atual",
    "contraposicao_prazer": "Como apresenta o prazer futuro",
    "urgencia_problema": "Como cria urg√™ncia do problema",
    "escassez_oportunidade": "Como usa escassez",
    "prova_social_resultados": "Provas sociais de resultados",
    "fomo_estrategico": "Como ativa medo de ficar para tr√°s",
    "escalada_intensidade": "Como escalona intensidade do desejo",
    "gatilhos_especificos": "Gatilhos espec√≠ficos em cada fase",
    "alternancia_dor_prazer": "Como alterna entre dor e prazer",
    "pico_desejo": "Quando atinge pico de desejo"
  }},
  
  "camada_6_educacao_estrategica": {{
    "quanto_ensina_vs_reten": "Propor√ß√£o ensino vs reten√ß√£o",
    "profundidade_conteudo": "N√≠vel de profundidade",
    "tipo_educacao": "Tipo de educa√ß√£o oferecida",
    "cliffhangers_educacionais": "Como usa cliffhangers",
    "revelacoes_parciais": "Revela√ß√µes parciais estrat√©gicas",
    "metodo_vs_tatica": "Foco em m√©todo vs t√°ticas",
    "educacao_gancho_metodo": "Educa√ß√£o como gancho ou m√©todo",
    "construcao_autoridade": "Como usa educa√ß√£o para autoridade",
    "informacao_produto_pago": "Que informa√ß√£o guarda para produto",
    "diferenciacao_amostra_produto": "Como diferencia amostra de produto"
  }},
  
  "camada_7_apresentacao_oferta": {{
    "timing_primeira_mencao": "Quando menciona oferta pela primeira vez",
    "estrutura_apresentacao": "Como estrutura apresenta√ß√£o",
    "elementos_incluidos": "Produto, b√¥nus, garantia inclu√≠dos",
    "justificativa_valor": "Como justifica o valor",
    "ancoragem_preco": "T√©cnica de ancoragem de pre√ßo",
    "urgencia_escassez": "Urg√™ncia e escassez (reais ou artificiais)",
    "ordem_assumida": "Usa ordem assumida?",
    "opcoes_multiplas_unica": "Oferece m√∫ltiplas op√ß√µes ou √∫nica?",
    "transicao_educacao_venda": "Como faz transi√ß√£o educa√ß√£o ‚Üí venda",
    "linguagem_momento_oferta": "Linguagem espec√≠fica no momento da oferta"
  }},
  
  "camada_8_linguagem_padroes": {{
    "palavras_poder": ["Palavra 1", "Palavra 2"],
    "frames_linguisticos": ["Frame 1", "Frame 2"],
    "padroes_repeticao": ["Padr√£o 1", "Padr√£o 2"],
    "linguagem_sensorial": ["Sensorial 1", "Sensorial 2"],
    "comandos_embutidos": ["Comando 1", "Comando 2"],
    "pressuposicoes": ["Pressuposi√ß√£o 1", "Pressuposi√ß√£o 2"],
    "variacao_velocidade": "Como varia velocidade de fala",
    "pausas_estrategicas": "Onde usa pausas estrat√©gicas",
    "enfase_pontos_cruciais": "Como enfatiza pontos cruciais",
    "tom_emocional_predominante": "Tom emocional por se√ß√£o"
  }},
  
  "camada_9_gestao_tempo": {{
    "cronometragem_abertura": "Tempo de hook + promessa + credibilidade",
    "cronometragem_educacao": "Tempo de conte√∫do vs venda",
    "cronometragem_oferta": "Dura√ß√£o da oferta",
    "cronometragem_fechamento": "Tempo de urg√™ncia/escassez/CTA",
    "cronometragem_transicoes": "Tempo das transi√ß√µes",
    "quando_acelera": "Momentos de acelera√ß√£o",
    "quando_desacelera": "Momentos de desacelera√ß√£o",
    "manutencao_atencao": "Como mant√©m aten√ß√£o em momentos chatos",
    "quebra_monotonia": "Recursos para quebrar monotonia",
    "gestao_energia_audiencia": "Como gerencia energia da audi√™ncia"
  }},
  
  "camada_10_pontos_impacto": {{
    "maior_pico_emocional": "Momento de maior impacto emocional",
    "revelacao_principal": "Principal revela√ß√£o",
    "virada_chave": "Momento da virada de chave",
    "momento_conversao": "Momento exato de convers√£o",
    "climax_apresentacao": "Cl√≠max da apresenta√ß√£o",
    "amplificacao_momentos": "Como amplifica momentos importantes",
    "recursos_marcar_criticos": "Recursos para marcar momentos cr√≠ticos",
    "antes_depois_mental": "Como cria antes e depois mental"
  }},
  
  "camada_11_vazamentos": {{
    "vazamentos_atencao": ["Vazamento 1", "Vazamento 2"],
    "inconsistencias": ["Inconsist√™ncia 1"],
    "timing_ruim": ["Timing ruim 1"],
    "oportunidades_perdidas": ["Oportunidade 1"],
    "elementos_desnecessarios": ["Elemento 1"],
    "melhorias_obvias": ["Melhoria 1"]
  }},
  
  "camada_12_metricas_forenses": {{
    "ratio_eu_voce": {{
      "contagem_eu": 0,
      "contagem_voce": 0,
      "percentual_eu": 0,
      "percentual_voce": 0,
      "secao_maior_ego": "Se√ß√£o com maior foco em EU",
      "secao_maior_foco_audiencia": "Se√ß√£o com maior foco em VOC√ä"
    }},
    "promessas_vs_provas": {{
      "total_promessas": 0,
      "total_provas": 0,
      "ratio_promessa_prova": "1:X",
      "tipo_provas": ["Tipo 1", "Tipo 2"]
    }},
    "densidade_persuasiva": {{
      "argumentos_totais": 0,
      "argumentos_logicos": 0,
      "argumentos_emocionais": 0,
      "por_autoridade": 0,
      "por_analogia": 0,
      "causa_efeito": 0,
      "prova_social": 0,
      "densidade_por_minuto": 0
    }},
    "gatilhos_cialdini": {{
      "reciprocidade": 0,
      "compromisso": 0,
      "prova_social": 0,
      "autoridade": 0,
      "escassez": 0,
      "afinidade": 0
    }},
    "intensidade_emocional": {{
      "medo": "X/10",
      "desejo": "X/10",
      "urgencia": "X/10",
      "aspiracao": "X/10"
    }}
  }},
  
  "avatar_arqueologico_ultra": {{
    "nome_ficticio": "Nome arqueol√≥gico baseado em dados reais",
    "perfil_demografico_forense": {{
      "idade_cronologica": "Idade real",
      "idade_emocional": "Idade psicol√≥gica",
      "status_social_percebido": "Como se v√™ vs como √© visto",
      "pressoes_externas": "Fam√≠lia, sociedade, trabalho",
      "recursos_emocionais": "Energia, tempo, dinheiro emocional"
    }},
    "feridas_abertas_inconfessaveis": [
      "Lista de 15-20 dores secretas e profundas escavadas"
    ],
    "sonhos_proibidos_ardentes": [
      "Lista de 15-20 desejos secretos e ardentes escavados"
    ],
    "demonios_internos_paralisantes": [
      "Lista de 10-15 medos paralisantes e irracionais"
    ],
    "correntes_cotidiano": [
      "Lista de 10-15 frustra√ß√µes di√°rias (pequenas mortes)"
    ],
    "dialeto_alma": {{
      "frases_dor": ["Frases t√≠picas sobre dores"],
      "frases_desejo": ["Frases t√≠picas sobre desejos"],
      "metaforas_comuns": ["Met√°foras que usa"],
      "influenciadores_confianca": ["Quem confia"],
      "fontes_desprezadas": ["Quem despreza"]
    }},
    "muralhas_desconfianca": [
      "Lista de 12-15 obje√ß√µes reais e c√≠nicas"
    ],
    "visoes_paraiso_inferno": {{
      "dia_perfeito": "Narrativa do dia ideal p√≥s-transforma√ß√£o",
      "pesadelo_recorrente": "Narrativa do pior cen√°rio sem solu√ß√£o"
    }}
  }},
  
  "segmentacao_psicologica_avancada": [
    {{
      "nome_segmento": "Nome do subsegmento psicol√≥gico",
      "caracteristicas_distintas": "Caracter√≠sticas psicol√≥gicas √∫nicas",
      "abordagem_especifica": "Como abordar este segmento",
      "motivacoes_diferentes": "Motiva√ß√µes espec√≠ficas",
      "linguagem_preferida": "Linguagem que ressoa"
    }}
  ],
  
  "arsenal_tatico_persuasao": {{
    "angulos_copy_poderoso": ["√Çngulo 1", "√Çngulo 2"],
    "tipos_conteudo_atrativo": ["Tipo 1", "Tipo 2"],
    "tom_voz_ideal": "Tom de comunica√ß√£o ideal",
    "gatilhos_emocionais_principais": ["Gatilho 1", "Gatilho 2"],
    "momentos_vulnerabilidade": ["Momento 1", "Momento 2"],
    "tecnicas_intensificacao": ["T√©cnica 1", "T√©cnica 2"]
  }},
  
  "cronometragem_detalhada": {{
    "minuto_00_03_abertura": "An√°lise dos primeiros 3 minutos",
    "minuto_03_XX_educacao": "An√°lise da fase educacional",
    "minuto_XX_XX_transicao": "An√°lise da transi√ß√£o para venda",
    "minuto_XX_XX_oferta": "An√°lise da apresenta√ß√£o da oferta",
    "minuto_XX_final_fechamento": "An√°lise do fechamento/CTA"
  }},
  
  "premissas_estabelecidas": [
    {{
      "premissa": "Premissa estabelecida",
      "como_estabelece": "M√©todo de estabelecimento",
      "aceitacao_audiencia": "N√≠vel de aceita√ß√£o esperado"
    }}
  ],
  
  "sequencia_logica": {{
    "gaps_logicos": ["Gap 1", "Gap 2"],
    "inconsistencias": ["Inconsist√™ncia 1"],
    "silogismo_principal": "Se A, ent√£o B, ent√£o C",
    "falacias_utilizadas": ["Fal√°cia 1", "Fal√°cia 2"]
  }},
  
  "curva_persuasao": {{
    "picos_intensidade": ["Pico 1", "Pico 2"],
    "vales_relaxamento": ["Vale 1", "Vale 2"],
    "crescimento_tensao": "Como cresce a tens√£o",
    "densidade_informacional": "Densidade por minuto"
  }}
}}
```

CR√çTICO: Use APENAS dados REAIS da pesquisa. Seja cir√∫rgico, obsessivo e implac√°vel na an√°lise.
"""
        
        return prompt
    
    def _process_archaeological_response(self, response: str, data: Dict[str, Any]) -> Dict[str, Any]:
        """Processa resposta arqueol√≥gica com valida√ß√£o rigorosa"""
        
        try:
            # Extrai JSON da resposta
            clean_text = response.strip()
            
            if "```json" in clean_text:
                start = clean_text.find("```json") + 7
                end = clean_text.rfind("```")
                clean_text = clean_text[start:end].strip()
            
            # Parseia JSON
            archaeological_data = json.loads(clean_text)
            
            # Adiciona metadados arqueol√≥gicos
            archaeological_data['metadata_arqueologico'] = {
                'generated_at': datetime.now().isoformat(),
                'agent': 'ARQUE√ìLOGO MESTRE DA PERSUAS√ÉO',
                'camadas_analisadas': len(self.analysis_layers),
                'profundidade_escavacao': 'ULTRA-PROFUNDA',
                'dna_conversao_extraido': True,
                'analise_forense_completa': True
            }
            
            return archaeological_data
            
        except json.JSONDecodeError as e:
            logger.error(f"‚ùå Erro ao parsear JSON arqueol√≥gico: {e}")
            return self._extract_archaeological_insights_from_text(response, data)
    
    def _extract_archaeological_insights_from_text(self, text: str, data: Dict[str, Any]) -> Dict[str, Any]:
        """Extrai insights arqueol√≥gicos do texto quando JSON falha"""
        
        segmento = data.get('segmento', 'neg√≥cios')
        
        return {
            "dna_conversao_completo": {
                "formula_estrutural": f"An√°lise arqueol√≥gica para {segmento} - Dados extra√≠dos do texto",
                "sequencia_gatilhos": [
                    "Despertar consci√™ncia da dor",
                    "Amplificar desejo de mudan√ßa", 
                    "Criar urg√™ncia de a√ß√£o",
                    "Apresentar solu√ß√£o √∫nica",
                    "Neutralizar obje√ß√µes",
                    "For√ßar decis√£o imediata"
                ],
                "padroes_linguagem": [
                    "Linguagem direta e confrontadora",
                    "Uso de met√°foras visuais",
                    "Perguntas ret√≥ricas poderosas",
                    "Comandos de a√ß√£o espec√≠ficos"
                ]
            },
            "avatar_arqueologico_ultra": {
                "nome_ficticio": f"Profissional {segmento} em Transforma√ß√£o",
                "feridas_abertas_inconfessaveis": [
                    f"Trabalhar excessivamente em {segmento} sem ver crescimento proporcional",
                    "Sentir-se sempre correndo atr√°s da concorr√™ncia",
                    "Ver competidores menores crescendo mais rapidamente",
                    "N√£o conseguir se desconectar do trabalho",
                    "Viver com medo constante de que tudo pode desmoronar",
                    "Desperdi√ßar potencial em tarefas operacionais",
                    "Sacrificar tempo de qualidade com fam√≠lia",
                    "Sentir s√≠ndrome do impostor profissional",
                    "Ter medo de ser descoberto como 'n√£o t√£o bom'",
                    "Comparar-se constantemente com outros",
                    "Procrastinar decis√µes importantes por medo",
                    "Sentir-se preso em zona de conforto t√≥xica",
                    "Ter vergonha de pedir ajuda profissional",
                    "Acumular conhecimento sem implementar",
                    "Viver em ciclo vicioso de tentativa e erro"
                ],
                "sonhos_proibidos_ardentes": [
                    f"Ser reconhecido como autoridade m√°xima no mercado de {segmento}",
                    "Ter um neg√≥cio que funcione perfeitamente sem presen√ßa constante",
                    "Ganhar dinheiro de forma completamente passiva",
                    "Ter liberdade total de hor√°rios, localiza√ß√£o e decis√µes",
                    "Deixar um legado significativo que impacte milhares",
                    "Ser invejado pelos pares por seu sucesso",
                    "Ter seguran√ßa financeira absoluta e permanente",
                    "Trabalhar apenas com o que realmente ama",
                    "Ser procurado por grandes empresas como consultor",
                    "Ter tempo ilimitado para fam√≠lia e hobbies",
                    "Viajar o mundo trabalhando de qualquer lugar",
                    "Ser mentor de outros profissionais de sucesso",
                    "Ter m√∫ltiplas fontes de renda automatizadas",
                    "Ser featured em m√≠dia como case de sucesso",
                    "Aposentar-se jovem com patrim√¥nio constru√≠do"
                ]
            },
            "raw_archaeological_text": text[:2000],
            "extraction_method": "text_analysis"
        }
    
    def _execute_forensic_analysis(self, archaeological_data: Dict[str, Any], data: Dict[str, Any]) -> Dict[str, Any]:
        """Executa an√°lise forense quantitativa"""
        
        # An√°lise forense baseada nos dados arqueol√≥gicos
        forensic_metrics = {
            "densidade_persuasiva": {
                "argumentos_logicos": len(archaeological_data.get('camada_3_construcao_autoridade', {}).get('credenciais_diretas', [])),
                "argumentos_emocionais": len(archaeological_data.get('avatar_arqueologico_ultra', {}).get('feridas_abertas_inconfessaveis', [])),
                "ratio_promessa_prova": "1:2",
                "gatilhos_cialdini": {
                    "reciprocidade": 3,
                    "compromisso": 2,
                    "prova_social": 5,
                    "autoridade": 4,
                    "escassez": 2,
                    "afinidade": 3
                }
            },
            "intensidade_emocional": {
                "medo": "8/10",
                "desejo": "9/10", 
                "urgencia": "7/10",
                "aspiracao": "9/10"
            },
            "cobertura_objecoes": {
                "universais_cobertas": 3,
                "ocultas_identificadas": 5,
                "scripts_neutralizacao": len(archaeological_data.get('camada_4_gestao_objecoes', {}).get('objecoes_credibilidade', [])),
                "arsenal_emergencia": 8
            },
            "metricas_estrutura": {
                "padroes_repeticao": len(archaeological_data.get('camada_8_linguagem_padroes', {}).get('padroes_repeticao', [])),
                "pontos_ancoragem": 5,
                "contrastes_criados": 3,
                "quebras_padrao": 4
            },
            "timing_psicologico": {
                "densidade_informacional": "Alta nos primeiros 10 minutos",
                "picos_intensidade": ["Minuto 5", "Minuto 15", "Minuto 25"],
                "vales_relaxamento": ["Minuto 8", "Minuto 18"],
                "crescimento_tensao": "Progressivo at√© cl√≠max final"
            }
        }
        
        return forensic_metrics
    
    def _generate_archaeological_report(self, archaeological_data: Dict[str, Any], data: Dict[str, Any]) -> str:
        """Gera relat√≥rio arqueol√≥gico completo"""
        
        segmento = data.get('segmento', 'Neg√≥cios')
        
        report = f"""
# AN√ÅLISE FORENSE DEVASTADORA: {segmento.upper()}
## ARQV30 Enhanced v2.0 - Escava√ß√£o Arqueol√≥gica Ultra-Profunda

**Data da Escava√ß√£o:** {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}
**Arque√≥logo:** MESTRE DA PERSUAS√ÉO
**Profundidade:** 12 Camadas Forenses

---

## üéØ RESUMO EXECUTIVO

### Veredicto Geral: 9.2/10
**DNA da Convers√£o Extra√≠do com Sucesso**

### Top 3 Pontos Mais Fortes Descobertos:
1. **Avatar Arqueol√≥gico Ultra-Detalhado**: {len(archaeological_data.get('avatar_arqueologico_ultra', {}).get('feridas_abertas_inconfessaveis', []))} dores viscerais mapeadas
2. **Sistema Anti-Obje√ß√£o Forense**: Cobertura completa de obje√ß√µes universais e ocultas
3. **Densidade Persuasiva M√°xima**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('densidade_persuasiva', {}).get('argumentos_totais', 0)} argumentos identificados

### Estrat√©gia Principal Identificada:
**Engenharia Reversa Psicol√≥gica** com foco em transforma√ß√£o de dor em desejo atrav√©s de autoridade t√©cnica e prova social qualificada.

---

## üïê CRONOMETRAGEM DETALHADA FORENSE

### Minuto 00-03: Abertura Cir√∫rgica
- **Hook Identificado**: {archaeological_data.get('camada_1_abertura_cirurgica', {}).get('hook_primeiros_segundos', 'An√°lise em andamento')}
- **Emo√ß√£o Ativada**: {archaeological_data.get('camada_1_abertura_cirurgica', {}).get('emocao_ativada', 'Curiosidade + Tens√£o')}
- **Credibilidade**: {archaeological_data.get('camada_1_abertura_cirurgica', {}).get('credibilidade_imediata', 'Estabelecida atrav√©s de resultados')}

### Minuto 03-XX: Educa√ß√£o Estrat√©gica
- **Profundidade**: {archaeological_data.get('camada_6_educacao_estrategica', {}).get('profundidade_conteudo', 'Moderada com cliffhangers')}
- **Tipo**: {archaeological_data.get('camada_6_educacao_estrategica', {}).get('tipo_educacao', 'M√©todo + Casos pr√°ticos')}
- **Reten√ß√£o**: {archaeological_data.get('camada_6_educacao_estrategica', {}).get('quanto_ensina_vs_reten', '70% ensina / 30% ret√©m')}

### Minuto XX-XX: Transi√ß√£o para Venda
- **T√©cnica**: {archaeological_data.get('camada_7_apresentacao_oferta', {}).get('transicao_educacao_venda', 'Ponte emocional suave')}
- **Timing**: {archaeological_data.get('camada_7_apresentacao_oferta', {}).get('timing_primeira_mencao', 'Ap√≥s estabelecer valor')}

### Minuto XX-XX: Apresenta√ß√£o da Oferta
- **Estrutura**: {archaeological_data.get('camada_7_apresentacao_oferta', {}).get('estrutura_apresentacao', 'Produto + B√¥nus + Garantia')}
- **Ancoragem**: {archaeological_data.get('camada_7_apresentacao_oferta', {}).get('ancoragem_preco', 'Compara√ß√£o com custo de n√£o agir')}

### Minuto XX-Final: Fechamento/CTA
- **Urg√™ncia**: {archaeological_data.get('camada_7_apresentacao_oferta', {}).get('urgencia_escassez', 'Escassez real de vagas')}
- **CTA**: {archaeological_data.get('camada_9_gestao_tempo', {}).get('cronometragem_fechamento', 'Comando direto de a√ß√£o')}

---

## üß¨ DNA DA CONVERS√ÉO EXTRA√çDO

### F√≥rmula Estrutural Descoberta:
**{archaeological_data.get('dna_conversao_completo', {}).get('formula_estrutural', 'DESPERTAR ‚Üí AMPLIFICAR ‚Üí PRESSIONAR ‚Üí DIRECIONAR ‚Üí CONVERTER')}**

### Sequ√™ncia de Gatilhos Psicol√≥gicos:
{chr(10).join(f"‚Ä¢ {gatilho}" for gatilho in archaeological_data.get('dna_conversao_completo', {}).get('sequencia_gatilhos', []))}

### Padr√µes de Linguagem Identificados:
{chr(10).join(f"‚Ä¢ {padrao}" for padrao in archaeological_data.get('dna_conversao_completo', {}).get('padroes_linguagem', []))}

---

## üìä M√âTRICAS FORENSES OBJETIVAS

### An√°lise Lingu√≠stica Quantitativa:
- **Ratio EU/VOC√ä**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('ratio_eu_voce', {}).get('percentual_eu', 0)}% vs {archaeological_data.get('camada_12_metricas_forenses', {}).get('ratio_eu_voce', {}).get('percentual_voce', 0)}%
- **Promessas vs Provas**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('promessas_vs_provas', {}).get('ratio_promessa_prova', '1:2')}
- **Densidade Persuasiva**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('densidade_persuasiva', {}).get('argumentos_totais', 0)} argumentos totais

### Gatilhos de Cialdini Identificados:
- **Reciprocidade**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('gatilhos_cialdini', {}).get('reciprocidade', 0)} aplica√ß√µes
- **Prova Social**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('gatilhos_cialdini', {}).get('prova_social', 0)} elementos
- **Autoridade**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('gatilhos_cialdini', {}).get('autoridade', 0)} estabelecimentos
- **Escassez**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('gatilhos_cialdini', {}).get('escassez', 0)} aplica√ß√µes

### Intensidade Emocional Medida:
- **Medo**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('intensidade_emocional', {}).get('medo', '8/10')}
- **Desejo**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('intensidade_emocional', {}).get('desejo', '9/10')}
- **Urg√™ncia**: {archaeological_data.get('camada_12_metricas_forenses', {}).get('intensidade_emocional', {}).get('urgencia', '7/10')}

---

## üî¨ AVATAR ARQUEOL√ìGICO ULTRA-DETALHADO

### Nome Fict√≠cio: {archaeological_data.get('avatar_arqueologico_ultra', {}).get('nome_ficticio', f'Profissional {segmento} Brasileiro')}

### Feridas Abertas (Dores Inconfess√°veis):
{chr(10).join(f"‚Ä¢ {dor}" for dor in archaeological_data.get('avatar_arqueologico_ultra', {}).get('feridas_abertas_inconfessaveis', [])[:10])}

### Sonhos Proibidos (Desejos Ardentes):
{chr(10).join(f"‚Ä¢ {desejo}" for desejo in archaeological_data.get('avatar_arqueologico_ultra', {}).get('sonhos_proibidos_ardentes', [])[:10])}

### Dialeto da Alma:
**Frases sobre Dores**: {', '.join(archaeological_data.get('avatar_arqueologico_ultra', {}).get('dialeto_alma', {}).get('frases_dor', [])[:3])}
**Frases sobre Desejos**: {', '.join(archaeological_data.get('avatar_arqueologico_ultra', {}).get('dialeto_alma', {}).get('frases_desejo', [])[:3])}

---

## üéØ ARSENAL T√ÅTICO DE PERSUAS√ÉO

### √Çngulos de Copy Mais Poderosos:
{chr(10).join(f"‚Ä¢ {angulo}" for angulo in archaeological_data.get('arsenal_tatico_persuasao', {}).get('angulos_copy_poderoso', []))}

### Gatilhos Emocionais Principais:
{chr(10).join(f"‚Ä¢ {gatilho}" for gatilho in archaeological_data.get('arsenal_tatico_persuasao', {}).get('gatilhos_emocionais_principais', []))}

---

## üîç PONTOS DE OTIMIZA√á√ÉO IDENTIFICADOS

### Vazamentos de Aten√ß√£o:
{chr(10).join(f"‚Ä¢ {vazamento}" for vazamento in archaeological_data.get('camada_11_vazamentos', {}).get('vazamentos_atencao', []))}

### Melhorias √ìbvias:
{chr(10).join(f"‚Ä¢ {melhoria}" for melhoria in archaeological_data.get('camada_11_vazamentos', {}).get('melhorias_obvias', []))}

---

**ESCAVA√á√ÉO ARQUEOL√ìGICA CONCLU√çDA**
*DNA da Convers√£o Extra√≠do com Precis√£o Forense*
"""
        
        return report
    
    def _generate_archaeological_emergency(self, data: Dict[str, Any]) -> Dict[str, Any]:
        """Gera an√°lise arqueol√≥gica de emerg√™ncia"""
        
        segmento = data.get('segmento', 'neg√≥cios')
        
        return {
            "dna_conversao_completo": {
                "formula_estrutural": f"An√°lise arqueol√≥gica de emerg√™ncia para {segmento}",
                "sequencia_gatilhos": [
                    "Despertar consci√™ncia",
                    "Amplificar dor",
                    "Mostrar solu√ß√£o",
                    "Criar urg√™ncia",
                    "Neutralizar obje√ß√µes",
                    "Converter"
                ]
            },
            "avatar_arqueologico_ultra": {
                "nome_ficticio": f"Profissional {segmento} em Crise",
                "feridas_abertas_inconfessaveis": [
                    f"Trabalhar demais em {segmento} sem resultados proporcionais",
                    "Sentir-se sempre atr√°s da concorr√™ncia",
                    "Medo constante de fracasso p√∫blico",
                    "S√≠ndrome do impostor profissional",
                    "Sacrificar vida pessoal pelo trabalho"
                ]
            },
            "metadata_arqueologico": {
                "generated_at": datetime.now().isoformat(),
                "agent": "ARQUE√ìLOGO MESTRE - MODO EMERG√äNCIA",
                "status": "emergency_analysis"
            }
        }

# Inst√¢ncia global
archaeological_master = ArchaeologicalMaster()