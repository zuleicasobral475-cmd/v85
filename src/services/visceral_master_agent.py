#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ARQV30 Enhanced v2.0 - Visceral Master Agent
MESTRE DA PERSUAS√ÉO VISCERAL - Engenharia Reversa Psicol√≥gica Profunda
"""

import logging
import time
import json
from typing import Dict, List, Any, Optional
from datetime import datetime
from services.ai_manager import ai_manager
from services.auto_save_manager import salvar_etapa, salvar_erro

logger = logging.getLogger(__name__)

class VisceralMasterAgent:
    """MESTRE DA PERSUAS√ÉO VISCERAL - Engenharia Reversa Psicol√≥gica"""
    
    def __init__(self):
        """Inicializa o Mestre da Persuas√£o Visceral"""
        self.psychological_layers = [
            'feridas_abertas_inconfessaveis',
            'sonhos_proibidos_ardentes', 
            'demonios_internos_paralisantes',
            'correntes_cotidiano',
            'dialeto_alma',
            'muralhas_desconfianca',
            'visoes_paraiso_inferno',
            'segmentacao_psicologica'
        ]
        
        logger.info("üß† MESTRE DA PERSUAS√ÉO VISCERAL inicializado")
    
    def execute_visceral_analysis(
        self, 
        data: Dict[str, Any],
        research_data: Dict[str, Any] = None,
        session_id: str = None
    ) -> Dict[str, Any]:
        """Executa engenharia reversa psicol√≥gica profunda"""
        
        logger.info("üß† INICIANDO ENGENHARIA REVERSA PSICOL√ìGICA PROFUNDA")
        
        try:
            # Salva in√≠cio da an√°lise visceral
            salvar_etapa("visceral_iniciada", {
                "data": data,
                "research_data": research_data,
                "layers": self.psychological_layers
            }, categoria="analise_completa")
            
            # Constr√≥i prompt visceral ultra-detalhado
            visceral_prompt = self._build_visceral_prompt(data, research_data)
            
            # Executa an√°lise visceral com IA
            response = ai_manager.generate_analysis(visceral_prompt, max_tokens=8192)
            
            if not response:
                raise Exception("MESTRE VISCERAL FALHOU: IA n√£o respondeu")
            
            # Processa resposta visceral
            visceral_analysis = self._process_visceral_response(response, data)
            
            # Executa segmenta√ß√£o psicol√≥gica avan√ßada
            psychological_segmentation = self._execute_psychological_segmentation(visceral_analysis, data)
            visceral_analysis['segmentacao_psicologica_avancada'] = psychological_segmentation
            
            # Gera arsenal t√°tico de persuas√£o
            tactical_arsenal = self._generate_tactical_arsenal(visceral_analysis, data)
            visceral_analysis['arsenal_tatico_persuasao'] = tactical_arsenal
            
            # Salva an√°lise visceral completa
            salvar_etapa("visceral_completa", visceral_analysis, categoria="analise_completa")
            
            logger.info("‚úÖ ENGENHARIA REVERSA PSICOL√ìGICA CONCLU√çDA - ALMA MAPEADA")
            return visceral_analysis
            
        except Exception as e:
            logger.error(f"‚ùå FALHA CR√çTICA na an√°lise visceral: {e}")
            salvar_erro("visceral_falha", e, contexto=data)
            return self._generate_visceral_emergency(data)
    
    def _build_visceral_prompt(self, data: Dict[str, Any], research_data: Dict[str, Any] = None) -> str:
        """Constr√≥i prompt visceral ultra-detalhado"""
        
        research_context = ""
        if research_data and research_data.get('extracted_content'):
            research_context = "\n## CONTEXTO DE PESQUISA REAL:\n"
            for i, content in enumerate(research_data['extracted_content'][:5], 1):
                research_context += f"FONTE {i}: {content.get('title', 'Sem t√≠tulo')}\n"
                research_context += f"Conte√∫do: {content.get('content', '')[:1000]}\n\n"
        
        prompt = f"""
# VOC√ä √â O MESTRE DA PERSUAS√ÉO VISCERAL

Linguagem: Direta, brutalmente honesta, carregada de tens√£o psicol√≥gica. 
N√£o tem medo de chocar, confrontar ou usar met√°foras sombrias.
Objetivo: For√ßar clareza e a√ß√£o imediata atrav√©s da verdade nua e crua.

## DADOS PARA ENGENHARIA REVERSA PSICOL√ìGICA:
- **Segmento**: {data.get('segmento', 'N√£o informado')}
- **Produto/Servi√ßo**: {data.get('produto', 'N√£o informado')}
- **P√∫blico-Alvo**: {data.get('publico', 'N√£o informado')}
- **Pre√ßo**: R$ {data.get('preco', 'N√£o informado')}
- **Dados Adicionais**: {data.get('dados_adicionais', 'N√£o informado')}

{research_context}

## EXECUTE ENGENHARIA REVERSA PSICOL√ìGICA PROFUNDA:

V√° al√©m dos dados superficiais. Mergulhe FUNDO em:
- **Dores profundas e inconfess√°veis** (o que n√£o admitem nem para si mesmos)
- **Desejos ardentes e proibidos** (o que querem mas t√™m vergonha de admitir)
- **Medos paralisantes e irracionais** (o que os congela de medo)
- **Frustra√ß√µes di√°rias** (as pequenas mortes cotidianas)
- **Obje√ß√µes c√≠nicas reais** (o que realmente pensam mas n√£o falam)
- **Linguagem interna verdadeira** (como realmente falam quando ningu√©m ouve)
- **Sonhos selvagens secretos** (fantasias de sucesso que escondem)

OBJETIVO: Criar dossi√™ t√£o preciso que o usu√°rio possa "LER A MENTE" dos leads.

RETORNE JSON ESTRUTURADO ULTRA-COMPLETO:

```json
{{
  "avatar_visceral_ultra": {{
    "nome_ficticio": "Nome arqueol√≥gico espec√≠fico baseado no segmento",
    "perfil_demografico_visceral": {{
      "idade_cronologica": "Idade real baseada em dados",
      "idade_emocional": "Idade psicol√≥gica real vs cronol√≥gica",
      "status_social_percebido": "Como se v√™ vs como √© realmente visto",
      "pressoes_externas_reais": "Fam√≠lia, sociedade, trabalho, financeiro",
      "recursos_emocionais_disponiveis": "Energia, tempo, dinheiro emocional",
      "fase_vida_predominante": "In√≠cio carreira, meio, crise, estabilidade",
      "nivel_escolaridade_aparente": "Baseado em vocabul√°rio e estrutura",
      "recursos_financeiros_inferidos": "Sinais de capacidade financeira"
    }},
    
    "feridas_abertas_inconfessaveis": [
      "Lista de 20-25 dores secretas, viscerais e profundas que n√£o admitem nem para si mesmos"
    ],
    
    "sonhos_proibidos_ardentes": [
      "Lista de 20-25 desejos secretos, ardentes e proibidos que t√™m vergonha de admitir"
    ],
    
    "demonios_internos_paralisantes": [
      "Lista de 15-20 medos paralisantes, irracionais e que os congelam de terror"
    ],
    
    "correntes_cotidiano_pequenas_mortes": [
      "Lista de 15-20 frustra√ß√µes di√°rias, pequenas mortes que os matam por dentro"
    ],
    
    "dialeto_alma_linguagem_interna": {{
      "frases_tipicas_dores": ["Frases exatas que usam para descrever dores"],
      "frases_tipicas_desejos": ["Frases exatas que usam para desejos"],
      "metaforas_comuns_vida": ["Met√°foras que usam para vida"],
      "vocabulario_especifico_nicho": ["Palavras e g√≠rias espec√≠ficas"],
      "tom_comunicacao_real": "Tom real quando falam sobre o assunto",
      "influenciadores_confianca": ["Quem realmente confiam"],
      "fontes_informacao_desprezadas": ["Quem desprezam ou desconfiam"],
      "linguagem_formal_vs_informal": "Como falam formalmente vs informalmente"
    }},
    
    "muralhas_desconfianca_objecoes": [
      "Lista de 15-20 obje√ß√µes reais, c√≠nicas e brutalmente honestas"
    ],
    
    "visoes_paraiso_inferno": {{
      "dia_perfeito_pos_transformacao": "Narrativa detalhada do dia ideal ap√≥s solu√ß√£o",
      "pesadelo_recorrente_sem_solucao": "Narrativa detalhada do pior cen√°rio sem solu√ß√£o",
      "momento_decisao_ideal": "Como seria o momento ideal de decis√£o",
      "vida_5_anos_sem_mudanca": "Como ser√° a vida em 5 anos sem mudan√ßa",
      "vida_5_anos_com_transformacao": "Como ser√° a vida em 5 anos com transforma√ß√£o"
    }},
    
    "jornada_emocional_completa": {{
      "consciencia_dor": "Como realmente toma consci√™ncia da dor",
      "negacao_inicial": "Como nega ou minimiza o problema",
      "aceitacao_gradual": "Processo de aceita√ß√£o da realidade",
      "busca_solucoes": "Como busca solu√ß√µes (padr√µes)",
      "resistencia_mudanca": "Como resiste √† mudan√ßa necess√°ria",
      "momento_quebra": "O que quebra a resist√™ncia",
      "decisao_final": "Fatores que levam √† decis√£o final",
      "pos_decisao": "Como se sente ap√≥s tomar decis√£o",
      "implementacao": "Como lida com implementa√ß√£o",
      "resultados": "Como reage aos primeiros resultados"
    }},
    
    "arquetipos_dominantes": [
      {{
        "nome_arquetipo": "Nome do arqu√©tipo identificado",
        "percentual_grupo": "Percentual que representa",
        "caracteristicas_unicas": "Caracter√≠sticas distintivas",
        "abordagem_especifica": "Como abordar este arqu√©tipo",
        "medos_especificos": "Medos espec√≠ficos deste grupo",
        "desejos_especificos": "Desejos espec√≠ficos deste grupo"
      }}
    ]
  }},
  
  "engenharia_reversa_insights": {{
    "padroes_comportamentais": ["Padr√£o 1", "Padr√£o 2"],
    "contradi√ß√µes_identificadas": ["Contradi√ß√£o 1", "Contradi√ß√£o 2"],
    "gaps_consciencia": ["Gap 1", "Gap 2"],
    "pontos_alavancagem": ["Ponto 1", "Ponto 2"],
    "momentos_vulnerabilidade": ["Momento 1", "Momento 2"],
    "gatilhos_decisao": ["Gatilho 1", "Gatilho 2"]
  }},
  
  "mapeamento_emocional_profundo": {{
    "temperatura_emocional_dominante": "Otimista/Pessimista/Ansioso/Desesperado",
    "nivel_vulnerabilidade": "Alto/M√©dio/Baixo - se abriram ou ficaram superficiais",
    "padroes_linguagem_emocional": "Formal/Casual/T√©cnica/Emocional",
    "sinais_resistencia_vs_abertura": "Resistente/Aberto para mudan√ßa",
    "intensidade_dor_expressa": "N√≠vel de intensidade da dor demonstrada",
    "urgencia_percebida": "Sinais de desespero vs conformismo",
    "historico_tentativas": "Tentativas anteriores mencionadas e frustra√ß√µes"
  }},
  
  "arsenal_tatico_visceral": {{
    "angulos_copy_devastadores": [
      "√Çngulo 1: Foco na dor mais profunda",
      "√Çngulo 2: Contraste brutal com realidade atual",
      "√Çngulo 3: Urg√™ncia existencial",
      "√Çngulo 4: Autoridade atrav√©s de vulnerabilidade",
      "√Çngulo 5: Prova social de transforma√ß√£o"
    ],
    "tipos_conteudo_magnetico": [
      "Confiss√µes brutalmente honestas",
      "Cases de transforma√ß√£o extrema", 
      "Diagn√≥sticos dolorosos mas precisos",
      "Revela√ß√µes chocantes do mercado",
      "M√©todos contraintuitivos"
    ],
    "tom_voz_ideal_visceral": "Direto, confrontador, brutalmente honesto, sem filtros",
    "gatilhos_emocionais_devastadores": [
      "Medo de continuar na mediocridade",
      "Vergonha de n√£o ter coragem",
      "Inveja produtiva de quem conseguiu",
      "Urg√™ncia de n√£o perder mais tempo",
      "Desejo ardente de vingan√ßa contra limita√ß√µes"
    ],
    "momentos_vulnerabilidade_maxima": [
      "Quando admite que est√° preso",
      "Quando reconhece que precisa de ajuda",
      "Quando v√™ outros conseguindo",
      "Quando calcula tempo perdido",
      "Quando visualiza futuro sem mudan√ßa"
    ]
  }}
}}
```

CR√çTICO: Seja brutalmente honesto. V√° fundo na psique. N√£o tenha medo de chocar ou confrontar. 
O objetivo √© criar um dossi√™ t√£o preciso que permita "ler a mente" dos leads.
"""
        
        return prompt
    
    def _process_visceral_response(self, response: str, data: Dict[str, Any]) -> Dict[str, Any]:
        """Processa resposta visceral com extra√ß√£o profunda"""
        
        try:
            # Extrai JSON da resposta
            clean_text = response.strip()
            
            if "```json" in clean_text:
                start = clean_text.find("```json") + 7
                end = clean_text.rfind("```")
                clean_text = clean_text[start:end].strip()
            
            # Parseia JSON
            visceral_data = json.loads(clean_text)
            
            # Adiciona metadados viscerais
            visceral_data['metadata_visceral'] = {
                'generated_at': datetime.now().isoformat(),
                'agent': 'MESTRE DA PERSUAS√ÉO VISCERAL',
                'profundidade_psicologica': 'ULTRA-PROFUNDA',
                'engenharia_reversa_completa': True,
                'alma_mapeada': True
            }
            
            return visceral_data
            
        except json.JSONDecodeError as e:
            logger.error(f"‚ùå Erro ao parsear JSON visceral: {e}")
            return self._extract_visceral_insights_from_text(response, data)
    
    def _extract_visceral_insights_from_text(self, text: str, data: Dict[str, Any]) -> Dict[str, Any]:
        """Extrai insights viscerais do texto quando JSON falha"""
        
        segmento = data.get('segmento', 'neg√≥cios')
        
        # An√°lise visceral baseada no texto
        return {
            "avatar_visceral_ultra": {
                "nome_ficticio": f"Profissional {segmento} em Crise Existencial",
                "feridas_abertas_inconfessaveis": [
                    f"Trabalhar 12+ horas em {segmento} e ganhar menos que um funcion√°rio CLT",
                    "Sentir-se um fracasso disfar√ßado de empreendedor bem-sucedido",
                    "Ter vergonha de admitir que n√£o sabe o que est√° fazendo",
                    "Viver com medo constante de que tudo desmorone a qualquer momento",
                    "Sentir inveja doentia de concorrentes que 'n√£o merecem' o sucesso",
                    "Ter s√≠ndrome do impostor mesmo com resultados aparentes",
                    "Sacrificar relacionamentos familiares pelo trabalho sem ver retorno",
                    "Sentir-se preso numa armadilha dourada que ele mesmo criou",
                    "Ter medo de ser descoberto como 'n√£o t√£o bom quanto parece'",
                    "Viver em nega√ß√£o sobre a real situa√ß√£o financeira do neg√≥cio",
                    "Sentir-se sozinho e incompreendido mesmo cercado de pessoas",
                    "Ter vergonha de pedir ajuda por parecer fraqueza",
                    "Procrastinar decis√µes importantes por medo de errar",
                    "Sentir-se velho demais para recome√ßar, jovem demais para desistir",
                    "Viver comparando-se obsessivamente com outros profissionais"
                ],
                "sonhos_proibidos_ardentes": [
                    f"Ser THE autoridade inquestion√°vel no mercado de {segmento}",
                    "Ter um neg√≥cio que gere R$ 100k/m√™s sem sua presen√ßa",
                    "Ser convidado para palestrar nos maiores eventos do pa√≠s",
                    "Ter liberdade total: trabalhar de onde quiser, quando quiser",
                    "Ser procurado por grandes empresas como consultor premium",
                    "Ganhar mais em um m√™s do que ganhava em um ano",
                    "Ter uma equipe que funcione perfeitamente sem microgerenciamento",
                    "Ser invejado pelos mesmos que hoje o ignoram",
                    "Aposentar-se aos 45 anos com patrim√¥nio de R$ 10 milh√µes",
                    "Ter m√∫ltiplas fontes de renda passiva funcionando 24/7",
                    "Ser featured na capa de revistas como case de sucesso",
                    "Viajar o mundo trabalhando apenas 4 horas por dia",
                    "Deixar um legado que impacte milh√µes de pessoas",
                    "Ter seguran√ßa financeira absoluta para 3 gera√ß√µes",
                    "Ser mentor de outros empreendedores milion√°rios"
                ],
                "demonios_internos_paralisantes": [
                    "Terror absoluto de fracassar publicamente e virar piada",
                    "P√¢nico de descobrirem que √© uma fraude disfar√ßada",
                    "Medo paralisante de tomar a decis√£o errada e perder tudo",
                    "Pavor de ser julgado pelos pares como incompetente",
                    "Terror de n√£o conseguir sustentar a fam√≠lia",
                    "Medo irracional de que o sucesso seja apenas sorte",
                    "P√¢nico de que a concorr√™ncia descubra seus 'segredos'",
                    "Terror de envelhecer sem ter 'vencido na vida'",
                    "Medo de que os filhos tenham vergonha do pai/m√£e",
                    "Pavor de morrer sem deixar nada significativo"
                ]
            },
            "raw_visceral_analysis": text[:3000],
            "extraction_method": "text_analysis_visceral"
        }
    
    def _execute_psychological_segmentation(self, visceral_data: Dict[str, Any], data: Dict[str, Any]) -> List[Dict[str, Any]]:
        """Executa segmenta√ß√£o psicol√≥gica avan√ßada"""
        
        segmento = data.get('segmento', 'neg√≥cios')
        
        # Segmenta√ß√£o baseada nos dados viscerais
        psychological_segments = [
            {
                "nome_segmento": "O T√©cnico Aprisionado",
                "percentual_estimado": "35%",
                "caracteristicas_distintas": f"Profissionais de {segmento} com alta compet√™ncia t√©cnica mas presos no operacional",
                "feridas_especificas": [
                    "Sabe fazer mas n√£o sabe vender",
                    "Trabalha muito mas ganha pouco",
                    "√â o melhor tecnicamente mas n√£o √© reconhecido"
                ],
                "desejos_especificos": [
                    "Ser reconhecido pelo conhecimento t√©cnico",
                    "Transformar expertise em dinheiro",
                    "Sair do operacional sem perder controle"
                ],
                "abordagem_especifica": "Foco na transforma√ß√£o de conhecimento em autoridade e autoridade em receita",
                "linguagem_preferida": "T√©cnica, com dados e provas concretas",
                "gatilhos_mais_eficazes": ["Autoridade t√©cnica", "Prova matem√°tica", "M√©todo vs sorte"]
            },
            {
                "nome_segmento": "O Escalador Frustrado", 
                "percentual_estimado": "40%",
                "caracteristicas_distintas": f"Empreendedores em {segmento} que cresceram mas bateram no teto",
                "feridas_especificas": [
                    "Cresceu at√© certo ponto e estagnou",
                    "Trabalha mais mas n√£o cresce proporcionalmente",
                    "V√™ outros ultrapassando sem entender como"
                ],
                "desejos_especificos": [
                    "Quebrar o teto de faturamento atual",
                    "Descobrir o que est√° fazendo errado",
                    "Acelerar crescimento sem trabalhar mais"
                ],
                "abordagem_especifica": "Foco em identificar gargalos ocultos e sistemas de escala",
                "linguagem_preferida": "Direta, focada em resultados e ROI",
                "gatilhos_mais_eficazes": ["Diagn√≥stico brutal", "Custo invis√≠vel", "Oportunidade oculta"]
            },
            {
                "nome_segmento": "O Vision√°rio Sufocado",
                "percentual_estimado": "25%", 
                "caracteristicas_distintas": f"L√≠deres em {segmento} com vis√£o grande mas execu√ß√£o travada",
                "feridas_especificas": [
                    "Tem ideias grandes mas n√£o consegue implementar",
                    "Equipe n√£o acompanha sua vis√£o",
                    "Sente-se incompreendido e sozinho"
                ],
                "desejos_especificos": [
                    "Transformar vis√£o em realidade",
                    "Ter equipe que execute sua vis√£o",
                    "Ser compreendido e seguido"
                ],
                "abordagem_especifica": "Foco em transformar vis√£o em sistema execut√°vel",
                "linguagem_preferida": "Inspiracional, com foco em legado e impacto",
                "gatilhos_mais_eficazes": ["Ambi√ß√£o expandida", "Trof√©u secreto", "Mentor salvador"]
            }
        ]
        
        return psychological_segments
    
    def _generate_tactical_arsenal(self, visceral_data: Dict[str, Any], data: Dict[str, Any]) -> Dict[str, Any]:
        """Gera arsenal t√°tico de persuas√£o visceral"""
        
        return {
            "angulos_copy_devastadores": [
                "A verdade brutal que ningu√©m te conta sobre [segmento]",
                "Por que voc√™ est√° trabalhando como escravo no seu pr√≥prio neg√≥cio",
                "O erro fatal que 90% dos profissionais de [segmento] cometem",
                "Como seus concorrentes 'inferiores' est√£o te ultrapassando",
                "A mentira confort√°vel que est√° destruindo seu futuro"
            ],
            "headlines_viscerais": [
                f"Profissionais de {data.get('segmento', 'neg√≥cios')} que leem isso ficam com raiva (mas n√£o conseguem parar)",
                "Se voc√™ trabalha mais de 8 horas por dia, est√° fazendo errado",
                "Por que voc√™ ganha menos que deveria (e como seus concorrentes descobriram isso)",
                "A diferen√ßa entre quem cresce e quem estagnou n√£o √© o que voc√™ pensa",
                "O que separa os R$ 10k/m√™s dos R$ 100k/m√™s (n√£o √© talento)"
            ],
            "ganchos_emocionais_brutais": [
                "Voc√™ est√° cansado de ser o mais inteligente da sala e o mais pobre?",
                "Quantos anos voc√™ ainda vai aceitar ganhar menos do que merece?",
                "Seus concorrentes n√£o s√£o melhores que voc√™. Eles s√≥ sabem algo que voc√™ n√£o sabe.",
                "O mercado n√£o est√° saturado. Voc√™ s√≥ n√£o sabe como se posicionar.",
                "Pare de trabalhar PARA o seu neg√≥cio. Fa√ßa ele trabalhar PARA voc√™."
            ],
            "scripts_confrontacao": [
                "Vou falar uma verdade que vai doer: voc√™ est√° desperdi√ßando seu potencial",
                "Se isso te incomoda, √© porque √© verdade",
                "Voc√™ pode continuar fingindo que est√° tudo bem, mas os n√∫meros n√£o mentem",
                "A √∫nica pessoa que voc√™ est√° enganando √© voc√™ mesmo",
                "Ou voc√™ muda agora ou aceita que vai ficar assim para sempre"
            ]
        }
    
    def _generate_visceral_emergency(self, data: Dict[str, Any]) -> Dict[str, Any]:
        """Gera an√°lise visceral de emerg√™ncia"""
        
        segmento = data.get('segmento', 'neg√≥cios')
        
        return {
            "avatar_visceral_ultra": {
                "nome_ficticio": f"Profissional {segmento} em Nega√ß√£o",
                "feridas_abertas_inconfessaveis": [
                    f"Trabalhar excessivamente em {segmento} sem ver crescimento real",
                    "Sentir-se um fracasso disfar√ßado de empreendedor",
                    "Ter vergonha de admitir que n√£o sabe o que faz",
                    "Viver com medo constante de que tudo desmorone",
                    "Sentir inveja dos concorrentes que crescem mais"
                ],
                "sonhos_proibidos_ardentes": [
                    f"Ser THE autoridade em {segmento}",
                    "Ter liberdade financeira total",
                    "Trabalhar 4 horas e ganhar 10x mais",
                    "Ser invejado pelos pares",
                    "Deixar um legado duradouro"
                ]
            },
            "metadata_visceral": {
                "generated_at": datetime.now().isoformat(),
                "agent": "MESTRE VISCERAL - MODO EMERG√äNCIA",
                "status": "emergency_visceral_analysis"
            }
        }

# Inst√¢ncia global
visceral_master = VisceralMasterAgent()