#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ARQV30 Enhanced v2.0 - Visceral Leads Engineer
MESTRE DA PERSUAS√ÉO VISCERAL - Engenharia Reversa Psicol√≥gica de Leads
"""

import logging
import time
import json
import pandas as pd
from typing import Dict, List, Any, Optional
from datetime import datetime
from services.ai_manager import ai_manager
from services.auto_save_manager import salvar_etapa, salvar_erro

logger = logging.getLogger(__name__)

class VisceralLeadsEngineer:
    """MESTRE DA PERSUAS√ÉO VISCERAL - Engenharia Reversa de Leads"""
    
    def __init__(self):
        """Inicializa o engenheiro visceral de leads"""
        self.psychological_layers = [
            'perfil_psicologico_profundo',
            'feridas_abertas_secretas',
            'sonhos_proibidos_ardentes',
            'demonios_internos_paralisantes',
            'correntes_cotidiano',
            'dialeto_alma',
            'muralhas_desconfianca',
            'visoes_paraiso_inferno',
            'segmentacao_psicologica',
            'arsenal_tatico_visceral'
        ]
        
        logger.info("üß† MESTRE DA PERSUAS√ÉO VISCERAL inicializado")
    
    def reverse_engineer_leads(
        self,
        leads_data: str,
        context_data: Dict[str, Any],
        session_id: str = None
    ) -> Dict[str, Any]:
        """Executa engenharia reversa psicol√≥gica profunda dos leads"""
        
        logger.info("üß† INICIANDO ENGENHARIA REVERSA PSICOL√ìGICA PROFUNDA")
        
        try:
            # Salva dados de entrada
            salvar_etapa("leads_visceral_input", {
                "leads_data_length": len(leads_data),
                "context_data": context_data,
                "psychological_layers": self.psychological_layers
            }, categoria="analise_completa")
            
            # Processa dados dos leads
            processed_leads = self._process_leads_data(leads_data)
            
            if not processed_leads:
                raise ValueError("Dados de leads insuficientes para engenharia reversa")
            
            # Constr√≥i prompt visceral ultra-detalhado
            visceral_prompt = self._build_visceral_prompt(processed_leads, context_data)
            
            # Executa engenharia reversa com IA
            response = ai_manager.generate_analysis(visceral_prompt, max_tokens=8192)
            
            if not response:
                raise Exception("MESTRE VISCERAL FALHOU: IA n√£o respondeu")
            
            # Processa resposta visceral
            visceral_analysis = self._process_visceral_response(response, context_data)
            
            # Executa segmenta√ß√£o psicol√≥gica avan√ßada
            psychological_segmentation = self._execute_psychological_segmentation(visceral_analysis, processed_leads)
            visceral_analysis['segmentacao_psicologica_avancada'] = psychological_segmentation
            
            # Gera arsenal t√°tico visceral
            tactical_arsenal = self._generate_tactical_arsenal(visceral_analysis, context_data)
            visceral_analysis['arsenal_tatico_visceral'] = tactical_arsenal
            
            # Gera dossi√™ confidencial
            confidential_dossier = self._generate_confidential_dossier(visceral_analysis, context_data)
            visceral_analysis['dossie_confidencial'] = confidential_dossier
            
            # Salva engenharia reversa completa
            salvar_etapa("leads_visceral_complete", visceral_analysis, categoria="analise_completa")
            
            logger.info("‚úÖ ENGENHARIA REVERSA PSICOL√ìGICA CONCLU√çDA")
            return visceral_analysis
            
        except Exception as e:
            logger.error(f"‚ùå FALHA CR√çTICA na engenharia reversa: {e}")
            salvar_erro("leads_visceral_error", e, contexto=context_data)
            return self._generate_visceral_emergency(context_data)
    
    def _process_leads_data(self, leads_data: str) -> Dict[str, Any]:
        """Processa dados dos leads"""
        
        try:
            # Tenta interpretar como JSON primeiro
            if leads_data.strip().startswith('{') or leads_data.strip().startswith('['):
                data = json.loads(leads_data)
                return {'type': 'json', 'data': data}
            
            # Tenta interpretar como CSV
            elif ',' in leads_data and '\n' in leads_data:
                lines = leads_data.strip().split('\n')
                if len(lines) > 1:
                    headers = [h.strip() for h in lines[0].split(',')]
                    rows = []
                    for line in lines[1:]:
                        if line.strip():
                            row_data = [cell.strip() for cell in line.split(',')]
                            if len(row_data) == len(headers):
                                rows.append(dict(zip(headers, row_data)))
                    
                    return {'type': 'csv', 'data': rows, 'headers': headers}
            
            # Interpreta como texto livre
            return {'type': 'text', 'data': leads_data}
            
        except Exception as e:
            logger.error(f"Erro ao processar dados de leads: {e}")
            return {'type': 'text', 'data': leads_data}
    
    def _build_visceral_prompt(self, processed_leads: Dict[str, Any], context_data: Dict[str, Any]) -> str:
        """Constr√≥i prompt visceral ultra-detalhado"""
        
        prompt = f"""
# VOC√ä √â O MESTRE DA PERSUAS√ÉO VISCERAL

Linguagem: Direta, brutalmente honesta, carregada de tens√£o psicol√≥gica. 
N√£o tem medo de chocar, confrontar ou usar met√°foras sombrias.
Objetivo: For√ßar clareza e a√ß√£o imediata atrav√©s da verdade nua e crua.

## DADOS BRUTOS DOS LEADS PARA ENGENHARIA REVERSA:
{json.dumps(processed_leads, indent=2, ensure_ascii=False)[:10000]}

## CONTEXTO DA PESQUISA:
- **Produto/Servi√ßo**: {context_data.get('produto_servico', 'N√£o informado')}
- **Principais Perguntas**: {context_data.get('principais_perguntas', 'N√£o informado')}
- **N√∫mero de Respostas**: {context_data.get('numero_respostas', 'N√£o informado')}
- **Demografia**: {context_data.get('informacoes_demograficas', 'N√£o informado')}

## EXECUTE ENGENHARIA REVERSA PSICOL√ìGICA PROFUNDA:

V√° al√©m dos dados superficiais. Mergulhe FUNDO em:
- **Dores profundas e inconfess√°veis** (o que n√£o admitem nem para si mesmos)
- **Desejos ardentes e proibidos** (o que querem mas t√™m vergonha de admitir)
- **Medos paralisantes e irracionais** (o que os congela de medo)
- **Frustra√ß√µes di√°rias** (as pequenas mortes cotidianas)
- **Obje√ß√µes c√≠nicas reais** (o que realmente pensam mas n√£o falam)
- **Linguagem interna verdadeira** (como realmente falam quando ningu√©m ouve)
- **Sonhos selvagens secretos** (fantasias de sucesso que escondem)

OBJETIVO: Criar dossi√™ t√£o preciso que o usu√°rio possa "LER A MENTE" dos leads.

RETORNE JSON ESTRUTURADO ULTRA-COMPLETO:

```json
{{
  "perfil_psicologico_profundo": {{
    "nome_arquetipo_dominante": "Nome do arqu√©tipo psicol√≥gico identificado",
    "idade_emocional_vs_cronologica": "Diferen√ßa entre idade real e maturidade emocional",
    "nivel_consciencia_problema": "N√≠vel de consci√™ncia sobre o problema",
    "nivel_consciencia_solucao": "N√≠vel de consci√™ncia sobre solu√ß√µes",
    "fase_jornada_heroi": "Em que fase da jornada do her√≥i est√£o",
    "resistencias_mudanca": "Principais resist√™ncias √† mudan√ßa identificadas",
    "motivadores_primarios": "O que realmente os motiva (n√£o o que dizem)",
    "sabotadores_internos": "Padr√µes de autossabotagem identificados"
  }},
  
  "feridas_abertas_secretas": [
    "Lista de 15-20 dores secretas, viscerais e inconfess√°veis extra√≠das dos dados"
  ],
  
  "sonhos_proibidos_ardentes": [
    "Lista de 15-20 desejos secretos, ardentes e proibidos identificados"
  ],
  
  "demonios_internos_paralisantes": [
    "Lista de 10-15 medos paralisantes e irracionais que os congelam"
  ],
  
  "correntes_cotidiano": [
    "Lista de 10-15 frustra√ß√µes di√°rias (pequenas mortes) identificadas"
  ],
  
  "dialeto_alma": {{
    "frases_tipicas_dores": ["Frases exatas que usam para descrever dores"],
    "frases_tipicas_desejos": ["Frases exatas que usam para desejos"],
    "metaforas_vida": ["Met√°foras que usam para descrever a vida"],
    "vocabulario_especifico": ["Palavras e g√≠rias espec√≠ficas do grupo"],
    "tom_comunicacao": "Tom real quando falam sobre o assunto",
    "influenciadores_confianca": ["Quem realmente confiam"],
    "fontes_desprezadas": ["Quem desprezam ou desconfiam"]
  }},
  
  "muralhas_desconfianca": [
    "Lista de 12-15 obje√ß√µes reais, c√≠nicas e brutalmente honestas"
  ],
  
  "visoes_paraiso_inferno": {{
    "dia_perfeito_pos_solucao": "Narrativa detalhada do dia ideal ap√≥s solu√ß√£o",
    "pesadelo_sem_solucao": "Narrativa detalhada do pior cen√°rio sem solu√ß√£o",
    "momento_decisao_ideal": "Como seria o momento ideal de decis√£o",
    "vida_5_anos_sem_mudanca": "Como ser√° em 5 anos sem mudan√ßa",
    "vida_5_anos_com_transformacao": "Como ser√° em 5 anos com transforma√ß√£o"
  }},
  
  "segmentacao_psicologica": [
    {{
      "nome_segmento": "Nome do subsegmento psicol√≥gico",
      "percentual_grupo": "Percentual que representa",
      "caracteristicas_unicas": "Caracter√≠sticas psicol√≥gicas distintivas",
      "abordagem_especifica": "Como abordar este segmento",
      "medos_especificos": "Medos espec√≠ficos deste grupo",
      "desejos_especificos": "Desejos espec√≠ficos deste grupo"
    }}
  ],
  
  "implicacoes_marketing_vendas": {{
    "angulos_copy_devastadores": ["√Çngulos de copy mais eficazes"],
    "headlines_viscerais": ["Headlines que geram impacto visceral"],
    "ganchos_emocionais": ["Ganchos emocionais mais poderosos"],
    "scripts_confrontacao": ["Scripts de confronta√ß√£o direta"],
    "momentos_vulnerabilidade": ["Quando est√£o mais vulner√°veis"],
    "tecnicas_intensificacao": ["Como intensificar emo√ß√µes"]
  }}
}}
```

CR√çTICO: Seja brutalmente honesto. V√° fundo na psique. N√£o tenha medo de chocar ou confrontar.
"""
        
        return prompt
    
    def _process_visceral_response(self, response: str, context_data: Dict[str, Any]) -> Dict[str, Any]:
        """Processa resposta visceral com extra√ß√£o profunda"""
        
        try:
            # Extrai JSON da resposta
            clean_text = response.strip()
            
            if "```json" in clean_text:
                start = clean_text.find("```json") + 7
                end = clean_text.rfind("```")
                clean_text = clean_text[start:end].strip()
            
            # Parseia JSON
            visceral_data = json.loads(clean_text)
            
            # Adiciona metadados viscerais
            visceral_data['metadata_visceral'] = {
                'generated_at': datetime.now().isoformat(),
                'agent': 'MESTRE DA PERSUAS√ÉO VISCERAL',
                'profundidade_psicologica': 'ULTRA-PROFUNDA',
                'engenharia_reversa_completa': True
            }
            
            return visceral_data
            
        except json.JSONDecodeError as e:
            logger.error(f"‚ùå Erro ao parsear JSON visceral: {e}")
            return self._extract_visceral_insights_from_text(response, context_data)
    
    def _extract_visceral_insights_from_text(self, text: str, context_data: Dict[str, Any]) -> Dict[str, Any]:
        """Extrai insights viscerais do texto quando JSON falha"""
        
        return {
            "perfil_psicologico_profundo": {
                "nome_arquetipo_dominante": "Profissional em Crise Existencial",
                "nivel_consciencia_problema": "Alto - sabem que algo est√° errado",
                "resistencias_mudanca": "Medo do desconhecido e zona de conforto"
            },
            "feridas_abertas_secretas": [
                "Trabalhar excessivamente sem ver crescimento proporcional",
                "Sentir-se um fracasso disfar√ßado de bem-sucedido",
                "Ter vergonha de admitir que n√£o sabe o que faz",
                "Viver com medo constante de que tudo desmorone",
                "Sentir inveja dos concorrentes que crescem mais"
            ],
            "raw_visceral_analysis": text[:3000],
            "extraction_method": "text_analysis_visceral"
        }
    
    def _execute_psychological_segmentation(self, visceral_data: Dict[str, Any], processed_leads: Dict[str, Any]) -> List[Dict[str, Any]]:
        """Executa segmenta√ß√£o psicol√≥gica avan√ßada"""
        
        # Segmenta√ß√£o baseada nos dados viscerais
        return [
            {
                "nome_segmento": "Os Desesperados Silenciosos",
                "percentual_estimado": "40%",
                "caracteristicas_unicas": "Sabem que precisam de ajuda mas t√™m vergonha de admitir",
                "abordagem_especifica": "Confronta√ß√£o gentil que valida suas dificuldades",
                "medos_especificos": ["Julgamento dos pares", "Admitir incompet√™ncia"],
                "desejos_especificos": ["Solu√ß√£o discreta", "Transforma√ß√£o sem exposi√ß√£o"]
            },
            {
                "nome_segmento": "Os Guerreiros Cansados",
                "percentual_estimado": "35%",
                "caracteristicas_unicas": "Lutaram muito mas est√£o exaustos e c√©ticos",
                "abordagem_especifica": "Reconhecer sua luta e oferecer descanso atrav√©s da solu√ß√£o",
                "medos_especificos": ["Mais uma decep√ß√£o", "Desperdi√ßar energia"],
                "desejos_especificos": ["Al√≠vio da luta", "Vit√≥ria merecida"]
            },
            {
                "nome_segmento": "Os Vision√°rios Frustrados",
                "percentual_estimado": "25%",
                "caracteristicas_unicas": "T√™m vis√£o grande mas execu√ß√£o travada",
                "abordagem_especifica": "Focar na ponte entre vis√£o e execu√ß√£o",
                "medos_especificos": ["Nunca realizar o potencial", "Morrer com m√∫sica dentro"],
                "desejos_especificos": ["Materializar a vis√£o", "Deixar legado"]
            }
        ]
    
    def _generate_tactical_arsenal(self, visceral_data: Dict[str, Any], context_data: Dict[str, Any]) -> Dict[str, Any]:
        """Gera arsenal t√°tico visceral"""
        
        return {
            "angulos_copy_devastadores": [
                "A verdade brutal que ningu√©m te conta sobre [nicho]",
                "Por que voc√™ est√° trabalhando como escravo no seu pr√≥prio neg√≥cio",
                "O erro fatal que 90% dos [profissionais] cometem",
                "Como seus concorrentes 'inferiores' est√£o te ultrapassando",
                "A mentira confort√°vel que est√° destruindo seu futuro"
            ],
            "headlines_viscerais": [
                "Se voc√™ trabalha mais de 8 horas por dia, est√° fazendo errado",
                "Por que voc√™ ganha menos que deveria (e como descobrir isso)",
                "A diferen√ßa entre quem cresce e quem estagnou n√£o √© o que voc√™ pensa",
                "O que separa os R$ 10k/m√™s dos R$ 100k/m√™s (n√£o √© talento)",
                "Voc√™ est√° cansado de ser o mais inteligente da sala e o mais pobre?"
            ],
            "ganchos_emocionais_brutais": [
                "Quantos anos voc√™ ainda vai aceitar ganhar menos do que merece?",
                "Seus concorrentes n√£o s√£o melhores que voc√™. Eles s√≥ sabem algo que voc√™ n√£o sabe.",
                "O mercado n√£o est√° saturado. Voc√™ s√≥ n√£o sabe como se posicionar.",
                "Pare de trabalhar PARA o seu neg√≥cio. Fa√ßa ele trabalhar PARA voc√™.",
                "Se isso te incomoda, √© porque √© verdade"
            ],
            "scripts_confrontacao": [
                "Vou falar uma verdade que vai doer: voc√™ est√° desperdi√ßando seu potencial",
                "Voc√™ pode continuar fingindo que est√° tudo bem, mas os n√∫meros n√£o mentem",
                "A √∫nica pessoa que voc√™ est√° enganando √© voc√™ mesmo",
                "Ou voc√™ muda agora ou aceita que vai ficar assim para sempre",
                "O tempo que voc√™ est√° perdendo pensando, outros est√£o usando para agir"
            ]
        }
    
    def _generate_confidential_dossier(self, visceral_analysis: Dict[str, Any], context_data: Dict[str, Any]) -> str:
        """Gera dossi√™ confidencial completo"""
        
        produto = context_data.get('produto_servico', 'Produto/Servi√ßo')
        
        dossier = f"""
# DOSSI√ä CONFIDENCIAL - ENGENHARIA REVERSA PSICOL√ìGICA
## MESTRE DA PERSUAS√ÉO VISCERAL

**Data da An√°lise:** {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}
**Produto/Servi√ßo:** {produto}
**N√∫mero de Leads Analisados:** {context_data.get('numero_respostas', 'N/A')}

---

## üß† PERFIL PSICOL√ìGICO PROFUNDO

### Arqu√©tipo Dominante: {visceral_analysis.get('perfil_psicologico_profundo', {}).get('nome_arquetipo_dominante', 'Profissional em Crise')}

**N√≠vel de Consci√™ncia do Problema:** {visceral_analysis.get('perfil_psicologico_profundo', {}).get('nivel_consciencia_problema', 'Alto')}
**Resist√™ncias √† Mudan√ßa:** {visceral_analysis.get('perfil_psicologico_profundo', {}).get('resistencias_mudanca', 'Medo do desconhecido')}

---

## ü©∏ AS FERIDAS ABERTAS (DORES SECRETAS E INCONFESS√ÅVEIS)

{chr(10).join(f"‚Ä¢ {dor}" for dor in visceral_analysis.get('feridas_abertas_secretas', [])[:15])}

---

## üî• OS SONHOS PROIBIDOS (DESEJOS ARDENTES E SECRETOS)

{chr(10).join(f"‚Ä¢ {desejo}" for desejo in visceral_analysis.get('sonhos_proibidos_ardentes', [])[:15])}

---

## üëπ OS DEM√îNIOS INTERNOS (MEDOS PARALISANTES)

{chr(10).join(f"‚Ä¢ {medo}" for medo in visceral_analysis.get('demonios_internos_paralisantes', [])[:10])}

---

## ‚õìÔ∏è AS CORRENTES DO COTIDIANO (FRUSTRA√á√ïES DI√ÅRIAS)

{chr(10).join(f"‚Ä¢ {frustracao}" for frustracao in visceral_analysis.get('correntes_cotidiano', [])[:10])}

---

## üó£Ô∏è O DIALETO DA ALMA

### Frases T√≠picas sobre Dores:
{chr(10).join(f'‚Ä¢ "{frase}"' for frase in visceral_analysis.get('dialeto_alma', {}).get('frases_tipicas_dores', [])[:5])}

### Frases T√≠picas sobre Desejos:
{chr(10).join(f'‚Ä¢ "{frase}"' for frase in visceral_analysis.get('dialeto_alma', {}).get('frases_tipicas_desejos', [])[:5])}

### Vocabul√°rio Espec√≠fico:
{', '.join(visceral_analysis.get('dialeto_alma', {}).get('vocabulario_especifico', [])[:10])}

---

## üõ°Ô∏è AS MURALHAS DA DESCONFIAN√áA

{chr(10).join(f"‚Ä¢ {objecao}" for objecao in visceral_analysis.get('muralhas_desconfianca', [])[:12])}

---

## üåÖ VIS√ïES DO PARA√çSO E DO INFERNO

### Dia Perfeito P√≥s-Solu√ß√£o:
{visceral_analysis.get('visoes_paraiso_inferno', {}).get('dia_perfeito_pos_solucao', 'An√°lise em andamento')}

### Pesadelo Sem Solu√ß√£o:
{visceral_analysis.get('visoes_paraiso_inferno', {}).get('pesadelo_sem_solucao', 'An√°lise em andamento')}

---

## üéØ SEGMENTA√á√ÉO PSICOL√ìGICA

{chr(10).join(f"**{seg.get('nome_segmento', 'Segmento')}** ({seg.get('percentual_estimado', '0%')}): {seg.get('caracteristicas_unicas', 'N/A')}" for seg in visceral_analysis.get('segmentacao_psicologica_avancada', []))}

---

## ‚öîÔ∏è ARSENAL T√ÅTICO VISCERAL

### √Çngulos de Copy Devastadores:
{chr(10).join(f"‚Ä¢ {angulo}" for angulo in visceral_analysis.get('arsenal_tatico_visceral', {}).get('angulos_copy_devastadores', []))}

### Headlines Viscerais:
{chr(10).join(f"‚Ä¢ {headline}" for headline in visceral_analysis.get('arsenal_tatico_visceral', {}).get('headlines_viscerais', []))}

---

## üéØ COMO USAR ESTE DOSSI√ä

1. **Para Copy/Headlines:** Use as dores inconfess√°veis como ganchos emocionais
2. **Para Storytelling:** Conecte com as frustra√ß√µes di√°rias e sonhos proibidos
3. **Para Obje√ß√µes:** Antecipe as muralhas de desconfian√ßa identificadas
4. **Para Segmenta√ß√£o:** Crie campanhas espec√≠ficas para cada segmento psicol√≥gico
5. **Para Timing:** Use momentos de vulnerabilidade para m√°ximo impacto

---

**ENGENHARIA REVERSA CONCLU√çDA**
*Alma dos Leads Mapeada com Precis√£o Visceral*
"""
        
        return dossier
    
    def _generate_visceral_emergency(self, context_data: Dict[str, Any]) -> Dict[str, Any]:
        """Gera an√°lise visceral de emerg√™ncia"""
        
        return {
            "perfil_psicologico_profundo": {
                "nome_arquetipo_dominante": "Profissional em Nega√ß√£o",
                "nivel_consciencia_problema": "M√©dio - sabem que algo n√£o vai bem",
                "resistencias_mudanca": "Zona de conforto e medo do julgamento"
            },
            "feridas_abertas_secretas": [
                "Trabalhar muito e ganhar pouco",
                "Sentir-se um impostor profissional",
                "Ter vergonha dos resultados atuais",
                "Viver com medo de fracassar publicamente",
                "Sacrificar vida pessoal sem retorno"
            ],
            "metadata_visceral": {
                "generated_at": datetime.now().isoformat(),
                "agent": "MESTRE VISCERAL - MODO EMERG√äNCIA",
                "status": "emergency_visceral_analysis"
            }
        }

# Inst√¢ncia global
visceral_leads_engineer = VisceralLeadsEngineer()